spring:
  application:
    name: consumer-feign

server:
  port: 6002

eureka:
  instance:
    instance-id: ${spring.cloud.client.ip-address}:${server.port} #euraka实例列表中显示的id
    prefer-ip-address: true
  client:
    #该应用为注册中心，设置为false表示不向注册中心注册自己，集群配置是必须设置为true
    register-with-eureka: true
    #该应用为注册中心，设置为false表示不需要要去检索服务，集群配置是必须设置为true
    fetch-registry: true
    fetch-remote-regions-registry: beijing #获取哪些远端region的注册表信息
    region: shanghai #该服务所在的region
    prefer-same-zone-eureka: true #是否优先和相同zone的server进行交互
    availability-zones:
      shanghai: shanghai-zone-1,shanghai-zone-2 #第一个就代表自己所在的zone
      beijing: beijing-zone-1,beijing-zone-2
    service-url: #这里不需要配置非自己所在的region的zone的url，EndpointUtils在解析的时候会根据自己的region去获取，其它region的就忽略了
      shanghai-zone-1: http://eureka-server-shanghai-zone1-7001.com:7001/eureka/ #同一个zone里也可以配置多个，逗号分隔即可
      shanghai-zone-2: http://eureka-server-shanghai-zone2-7002.com:7002/eureka/

#feign:
#  hystrix:
#    enabled: true

##通过下面配置修改feign的负载策略
#provider-server:
#  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule #配置规则 随机
##   NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule #配置规则 轮询
##   NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RetryRule #配置规则 重试
##   NFLoadBalancerRuleClassName: com.netflix.loadbalancer.WeightedResponseTimeRule #配置规则 响应时间权重
##   NFLoadBalancerRuleClassName: com.netflix.loadbalancer.BestAvailableRule #配置规则 最空闲连接策略
#    ConnectTimeout: 500 #请求连接超时时间
#    ReadTimeout: 1000 #请求处理的超时时间

info:
  app.name: ${spring.application.name}
  build.artifactId: ${project.artifactId}
  build.version: ${project.version}